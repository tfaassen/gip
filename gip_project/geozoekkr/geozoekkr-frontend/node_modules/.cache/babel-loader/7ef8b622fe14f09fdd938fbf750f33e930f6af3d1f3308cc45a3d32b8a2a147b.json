{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teun.faassen\\\\gip\\\\gip_project\\\\geozoekkr\\\\geozoekkr-frontend\\\\src\\\\pages\\\\Locatie.js\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction locatie() {\n  var _s = $RefreshSig$();\n  const locatie = ({\n    apiKey\n  }) => {\n    _s();\n    const [timer, setTimer] = useState(150);\n    const [selectedCoordinates, setSelectedCoordinates] = useState(null);\n    const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\n    const [panorama, setPanorama] = useState(null);\n    let timerInterval;\n    useEffect(() => {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&callback=initMap`;\n      script.async = true;\n      document.body.appendChild(script);\n      document.head.appendChild(script);\n      return () => {\n        document.head.removeChild(script);\n        clearInterval(timerInterval);\n      };\n    }, [apiKey]);\n    window.initMap = () => {\n      const streetViewService = new google.maps.StreetViewService();\n      const startCoordinates = {\n        lat: 52.379189,\n        lng: 4.900826\n      };\n      let map;\n      let marker = null;\n      function getRandomLocation() {\n        const lat = (Math.random() * 180 - 90).toFixed(6);\n        const lng = (Math.random() * 360 - 180).toFixed(6);\n        return {\n          lat: parseFloat(lat),\n          lng: parseFloat(lng)\n        };\n      }\n      function loadStreetView(location) {\n        streetViewService.getPanorama({\n          location,\n          radius: 5000\n        }, (data, status) => {\n          if (status === google.maps.StreetViewStatus.OK) {\n            setStreetViewStartCoordinates({\n              lat: data.location.latLng.lat(),\n              lng: data.location.latLng.lng()\n            });\n            const panoramaInstance = new google.maps.StreetViewPanorama(document.getElementById(\"street-view\"), {\n              position: data.location.latLng,\n              pov: {\n                heading: 0,\n                pitch: 0\n              },\n              zoom: 1,\n              fullscreenControl: false,\n              enableCloseButton: false,\n              addressControl: false,\n              linksControl: false,\n              showRoadLabels: false\n            });\n            setPanorama(panoramaInstance);\n            startTimer();\n          } else {\n            findRandomStreetView();\n          }\n        });\n      }\n      function findRandomStreetView() {\n        loadStreetView(getRandomLocation());\n      }\n      function startTimer() {\n        timerInterval = setInterval(() => {\n          setTimer(prev => {\n            if (prev <= 1) {\n              clearInterval(timerInterval);\n              lockStreetView();\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n      }\n      function lockStreetView() {\n        if (panorama) {\n          panorama.setOptions({\n            disableDefaultUI: true,\n            draggable: false,\n            linksControl: false,\n            motionTracking: false,\n            motionTrackingControl: false,\n            clickToGo: false,\n            keyboardShortcuts: false\n          });\n          alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n        }\n      }\n      map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 1,\n        center: startCoordinates,\n        disableDefaultUI: true\n      });\n      map.addListener(\"click\", event => {\n        if (marker) {\n          marker.setPosition(event.latLng);\n        } else {\n          marker = new google.maps.Marker({\n            position: event.latLng,\n            map: map\n          });\n        }\n        setSelectedCoordinates({\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng()\n        });\n      });\n      findRandomStreetView();\n    };\n    function calculateDistance(coord1, coord2) {\n      const R = 6371;\n      const dLat = (coord2.lat - coord1.lat) * Math.PI / 180;\n      const dLng = (coord2.lng - coord1.lng) * Math.PI / 180;\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.lat * Math.PI / 180) * Math.cos(coord2.lat * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n      return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n    }\n    function handleSearch() {\n      if (selectedCoordinates && streetViewStartCoordinates) {\n        const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\n        alert(`Afstand: ${distance.toFixed(2)} km`);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timer-container\",\n        children: [\"Tijd over: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [Math.floor(timer / 60), \":\", (timer % 60).toString().padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"street-view\",\n        style: {\n          width: \"100%\",\n          height: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Bekijk Afstand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        style: {\n          width: \"100%\",\n          height: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this);\n  };\n  _s(locatie, \"i7YSVOUv5BEE7o9AMkFDwu40xHM=\");\n}\n;\nexport default locatie;","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","locatie","_s","$RefreshSig$","apiKey","timer","setTimer","selectedCoordinates","setSelectedCoordinates","streetViewStartCoordinates","setStreetViewStartCoordinates","panorama","setPanorama","timerInterval","script","document","createElement","src","API_KEY","async","body","appendChild","head","removeChild","clearInterval","window","initMap","streetViewService","google","maps","StreetViewService","startCoordinates","lat","lng","map","marker","getRandomLocation","Math","random","toFixed","parseFloat","loadStreetView","location","getPanorama","radius","data","status","StreetViewStatus","OK","latLng","panoramaInstance","StreetViewPanorama","getElementById","position","pov","heading","pitch","zoom","fullscreenControl","enableCloseButton","addressControl","linksControl","showRoadLabels","startTimer","findRandomStreetView","setInterval","prev","lockStreetView","setOptions","disableDefaultUI","draggable","motionTracking","motionTrackingControl","clickToGo","keyboardShortcuts","alert","Map","center","addListener","event","setPosition","Marker","calculateDistance","coord1","coord2","R","dLat","PI","dLng","a","sin","cos","atan2","sqrt","handleSearch","distance","children","id","floor","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","onClick"],"sources":["C:/Users/teun.faassen/gip/gip_project/geozoekkr/geozoekkr-frontend/src/pages/Locatie.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nfunction locatie () {\r\nconst locatie = ({ apiKey }) => {\r\n  const [timer, setTimer] = useState(150);\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\r\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\r\n  const [panorama, setPanorama] = useState(null);\r\n  let timerInterval;\r\n\r\n  useEffect(() => {\r\n            const script = document.createElement(\"script\");\r\n            script.src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&callback=initMap`;\r\n            script.async = true;\r\n            document.body.appendChild(script);\r\n            document.head.appendChild(script);\r\n            return () => {\r\n                document.head.removeChild(script);\r\n                clearInterval(timerInterval);\r\n            };\r\n    \r\n    }, [apiKey]);\r\n\r\n  window.initMap = () => {\r\n    const streetViewService = new google.maps.StreetViewService();\r\n    const startCoordinates = { lat: 52.379189, lng: 4.900826 };\r\n    let map;\r\n    let marker = null;\r\n    \r\n    function getRandomLocation() {\r\n      const lat = (Math.random() * 180 - 90).toFixed(6);\r\n      const lng = (Math.random() * 360 - 180).toFixed(6);\r\n      return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n    }\r\n\r\n    function loadStreetView(location) {\r\n      streetViewService.getPanorama({ location, radius: 5000 }, (data, status) => {\r\n        if (status === google.maps.StreetViewStatus.OK) {\r\n          setStreetViewStartCoordinates({\r\n            lat: data.location.latLng.lat(),\r\n            lng: data.location.latLng.lng(),\r\n          });\r\n          const panoramaInstance = new google.maps.StreetViewPanorama(\r\n            document.getElementById(\"street-view\"),\r\n            {\r\n              position: data.location.latLng,\r\n              pov: { heading: 0, pitch: 0 },\r\n              zoom: 1,\r\n              fullscreenControl: false,\r\n              enableCloseButton: false,\r\n              addressControl: false,\r\n              linksControl: false,\r\n              showRoadLabels: false,\r\n            }\r\n          );\r\n          setPanorama(panoramaInstance);\r\n          startTimer();\r\n        } else {\r\n          findRandomStreetView();\r\n        }\r\n      });\r\n    }\r\n\r\n    function findRandomStreetView() {\r\n      loadStreetView(getRandomLocation());\r\n    }\r\n\r\n    function startTimer() {\r\n      timerInterval = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(timerInterval);\r\n            lockStreetView();\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    function lockStreetView() {\r\n      if (panorama) {\r\n        panorama.setOptions({\r\n          disableDefaultUI: true,\r\n          draggable: false,\r\n          linksControl: false,\r\n          motionTracking: false,\r\n          motionTrackingControl: false,\r\n          clickToGo: false,\r\n          keyboardShortcuts: false,\r\n        });\r\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n      }\r\n    }\r\n\r\n    map = new google.maps.Map(document.getElementById(\"map\"), {\r\n      zoom: 1,\r\n      center: startCoordinates,\r\n      disableDefaultUI: true,\r\n    });\r\n\r\n    map.addListener(\"click\", (event) => {\r\n      if (marker) {\r\n        marker.setPosition(event.latLng);\r\n      } else {\r\n        marker = new google.maps.Marker({\r\n          position: event.latLng,\r\n          map: map,\r\n        });\r\n      }\r\n      setSelectedCoordinates({ lat: event.latLng.lat(), lng: event.latLng.lng() });\r\n    });\r\n\r\n    findRandomStreetView();\r\n  };\r\n\r\n  function calculateDistance(coord1, coord2) {\r\n    const R = 6371;\r\n    const dLat = ((coord2.lat - coord1.lat) * Math.PI) / 180;\r\n    const dLng = ((coord2.lng - coord1.lng) * Math.PI) / 180;\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((coord1.lat * Math.PI) / 180) *\r\n        Math.cos((coord2.lat * Math.PI) / 180) *\r\n        Math.sin(dLng / 2) *\r\n        Math.sin(dLng / 2);\r\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\r\n  }\r\n\r\n  function handleSearch() {\r\n    if (selectedCoordinates && streetViewStartCoordinates) {\r\n      const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\r\n      alert(`Afstand: ${distance.toFixed(2)} km`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"timer-container\">\r\n        Tijd over: <span>{Math.floor(timer / 60)}:{(timer % 60).toString().padStart(2, \"0\")}</span>\r\n      </div>\r\n      <div id=\"street-view\" style={{ width: \"100%\", height: \"300px\" }}></div>\r\n      <button onClick={handleSearch}>Bekijk Afstand</button>\r\n      <div id=\"map\" style={{ width: \"100%\", height: \"300px\" }}></div>\r\n    </div>\r\n  );\r\n};};\r\n\r\nexport default locatie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}