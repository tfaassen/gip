{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teun.faassen\\\\gip\\\\gip_project\\\\geozoekkr\\\\geozoekkr-frontend\\\\src\\\\pages\\\\Locatie.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Locatie = () => {\n  _s();\n  const [timer, setTimer] = useState(150);\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\n  const [panorama, setPanorama] = useState(null);\n  const [mapExpanded, setMapExpanded] = useState(false);\n  const navigate = useNavigate();\n  const mapRef = useRef(null);\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const timerInterval = useRef(null);\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\n      script.async = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        console.log(\"Google Maps API geladen!\");\n      };\n    }\n    return () => {\n      clearInterval(timerInterval.current);\n    };\n  }, [apiKey]);\n  window.initMap = () => {\n    const streetViewService = new window.google.maps.StreetViewService();\n    const startCoordinates = {\n      lat: 52.379189,\n      lng: 4.900826\n    };\n    let marker = null;\n    function getRandomLocation() {\n      const lat = (Math.random() * 180 - 90).toFixed(6);\n      const lng = (Math.random() * 360 - 180).toFixed(6);\n      return {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng)\n      };\n    }\n    function loadStreetView(location) {\n      streetViewService.getPanorama({\n        location,\n        radius: 5000\n      }, (data, status) => {\n        if (status === window.google.maps.StreetViewStatus.OK) {\n          setStreetViewStartCoordinates({\n            lat: data.location.latLng.lat(),\n            lng: data.location.latLng.lng()\n          });\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(document.getElementById(\"street-view\"), {\n            position: data.location.latLng,\n            pov: {\n              heading: 0,\n              pitch: 0\n            },\n            zoom: 1,\n            fullscreenControl: false,\n            enableCloseButton: false,\n            addressControl: false,\n            linksControl: false,\n            showRoadLabels: false\n          });\n          setPanorama(panoramaInstance);\n          startTimer();\n        } else {\n          findRandomStreetView();\n        }\n      });\n    }\n    function findRandomStreetView() {\n      loadStreetView(getRandomLocation());\n    }\n    function startTimer() {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            clearInterval(timerInterval.current);\n            lockStreetView();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    function lockStreetView() {\n      if (panorama) {\n        panorama.setOptions({\n          disableDefaultUI: true,\n          draggable: false,\n          linksControl: false,\n          motionTracking: false,\n          motionTrackingControl: false,\n          clickToGo: false,\n          keyboardShortcuts: false\n        });\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n      }\n    }\n    const map = new window.google.maps.Map(mapRef.current, {\n      zoom: 1,\n      center: startCoordinates,\n      disableDefaultUI: true\n    });\n    map.addListener(\"click\", event => {\n      if (marker) {\n        marker.setPosition(event.latLng);\n      } else {\n        marker = new window.google.maps.Marker({\n          position: event.latLng,\n          map: map\n        });\n      }\n      setSelectedCoordinates({\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      });\n    });\n    findRandomStreetView();\n  };\n  function calculateDistance(coord1, coord2) {\n    const R = 6371;\n    const dLat = (coord2.lat - coord1.lat) * Math.PI / 180;\n    const dLng = (coord2.lng - coord1.lng) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.lat * Math.PI / 180) * Math.cos(coord2.lat * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  }\n  function handleSearch() {\n    if (selectedCoordinates && streetViewStartCoordinates) {\n      const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\n      navigate(\"/resultaat\", {\n        state: {\n          distance,\n          selectedCoordinates,\n          streetViewStartCoordinates\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer-container\",\n      children: [\"Tijd over: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [Math.floor(timer / 60), \":\", (timer % 60).toString().padStart(2, \"0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"street-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map-container\",\n      className: mapExpanded ? \"expanded\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-map-btn\",\n        onClick: () => setMapExpanded(!mapExpanded),\n        children: mapExpanded ? \"Verberg Kaart\" : \"Toon Kaart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\",\n        ref: mapRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), selectedCoordinates && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"distance-btn\",\n      onClick: handleSearch,\n      children: \"Bekijk Afstand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(Locatie, \"C8UC3AiwwobWbnbNu6u1p7jLSvw=\", false, function () {\n  return [useNavigate];\n});\n_c = Locatie;\nexport default Locatie;\nvar _c;\n$RefreshReg$(_c, \"Locatie\");","map":{"version":3,"names":["useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Locatie","_s","timer","setTimer","selectedCoordinates","setSelectedCoordinates","streetViewStartCoordinates","setStreetViewStartCoordinates","panorama","setPanorama","mapExpanded","setMapExpanded","navigate","mapRef","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","timerInterval","window","google","script","document","createElement","src","async","body","appendChild","onload","console","log","clearInterval","current","initMap","streetViewService","maps","StreetViewService","startCoordinates","lat","lng","marker","getRandomLocation","Math","random","toFixed","parseFloat","loadStreetView","location","getPanorama","radius","data","status","StreetViewStatus","OK","latLng","panoramaInstance","StreetViewPanorama","getElementById","position","pov","heading","pitch","zoom","fullscreenControl","enableCloseButton","addressControl","linksControl","showRoadLabels","startTimer","findRandomStreetView","setInterval","prev","lockStreetView","setOptions","disableDefaultUI","draggable","motionTracking","motionTrackingControl","clickToGo","keyboardShortcuts","alert","map","Map","center","addListener","event","setPosition","Marker","calculateDistance","coord1","coord2","R","dLat","PI","dLng","a","sin","cos","atan2","sqrt","handleSearch","distance","state","className","children","id","floor","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c","$RefreshReg$"],"sources":["C:/Users/teun.faassen/gip/gip_project/geozoekkr/geozoekkr-frontend/src/pages/Locatie.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Locatie = () => {\r\n  const [timer, setTimer] = useState(150);\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\r\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\r\n  const [panorama, setPanorama] = useState(null);\r\n  const [mapExpanded, setMapExpanded] = useState(false);\r\n  const navigate = useNavigate();\r\n  const mapRef = useRef(null);\r\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n  const timerInterval = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!window.google) {\r\n        const script = document.createElement(\"script\");\r\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n        script.onload = () => {\r\n          console.log(\"Google Maps API geladen!\");\r\n        };\r\n    }\r\n    return () => {\r\n        clearInterval(timerInterval.current);\r\n    };\r\n  }, [apiKey]);\r\n\r\n  window.initMap = () => {\r\n    const streetViewService = new window.google.maps.StreetViewService();\r\n    const startCoordinates = { lat: 52.379189, lng: 4.900826 };\r\n    let marker = null;\r\n\r\n    function getRandomLocation() {\r\n      const lat = (Math.random() * 180 - 90).toFixed(6);\r\n      const lng = (Math.random() * 360 - 180).toFixed(6);\r\n      return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n    }\r\n\r\n    function loadStreetView(location) {\r\n      streetViewService.getPanorama({ location, radius: 5000 }, (data, status) => {\r\n        if (status === window.google.maps.StreetViewStatus.OK) {\r\n          setStreetViewStartCoordinates({\r\n            lat: data.location.latLng.lat(),\r\n            lng: data.location.latLng.lng(),\r\n          });\r\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(\r\n            document.getElementById(\"street-view\"),\r\n            {\r\n              position: data.location.latLng,\r\n              pov: { heading: 0, pitch: 0 },\r\n              zoom: 1,\r\n              fullscreenControl: false,\r\n              enableCloseButton: false,\r\n              addressControl: false,\r\n              linksControl: false,\r\n              showRoadLabels: false,\r\n            }\r\n          );\r\n          setPanorama(panoramaInstance);\r\n          startTimer();\r\n        } else {\r\n          findRandomStreetView();\r\n        }\r\n      });\r\n    }\r\n\r\n    function findRandomStreetView() {\r\n      loadStreetView(getRandomLocation());\r\n    }\r\n\r\n    function startTimer() {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(timerInterval.current);\r\n            lockStreetView();\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    function lockStreetView() {\r\n      if (panorama) {\r\n        panorama.setOptions({\r\n          disableDefaultUI: true,\r\n          draggable: false,\r\n          linksControl: false,\r\n          motionTracking: false,\r\n          motionTrackingControl: false,\r\n          clickToGo: false,\r\n          keyboardShortcuts: false,\r\n        });\r\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n      }\r\n    }\r\n\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      zoom: 1,\r\n      center: startCoordinates,\r\n      disableDefaultUI: true,\r\n    });\r\n\r\n    map.addListener(\"click\", (event) => {\r\n      if (marker) {\r\n        marker.setPosition(event.latLng);\r\n      } else {\r\n        marker = new window.google.maps.Marker({\r\n          position: event.latLng,\r\n          map: map,\r\n        });\r\n      }\r\n      setSelectedCoordinates({ lat: event.latLng.lat(), lng: event.latLng.lng() });\r\n    });\r\n\r\n    findRandomStreetView();\r\n  };\r\n\r\n  function calculateDistance(coord1, coord2) {\r\n    const R = 6371;\r\n    const dLat = ((coord2.lat - coord1.lat) * Math.PI) / 180;\r\n    const dLng = ((coord2.lng - coord1.lng) * Math.PI) / 180;\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((coord1.lat * Math.PI) / 180) *\r\n        Math.cos((coord2.lat * Math.PI) / 180) *\r\n        Math.sin(dLng / 2) *\r\n        Math.sin(dLng / 2);\r\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\r\n  }\r\n\r\n  function handleSearch() {\r\n    if (selectedCoordinates && streetViewStartCoordinates) {\r\n      const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\r\n      navigate(\"/resultaat\", { state: { distance, selectedCoordinates, streetViewStartCoordinates } });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div id=\"timer-container\">\r\n        Tijd over: <span>{Math.floor(timer / 60)}:{(timer % 60).toString().padStart(2, \"0\")}</span>\r\n      </div>\r\n      <div id=\"street-view\"></div>\r\n      <div id=\"map-container\" className={mapExpanded ? \"expanded\" : \"\"}>\r\n        <button className=\"toggle-map-btn\" onClick={() => setMapExpanded(!mapExpanded)}>\r\n          {mapExpanded ? \"Verberg Kaart\" : \"Toon Kaart\"}\r\n        </button>\r\n        <div id=\"map\" ref={mapRef}></div>\r\n      </div>\r\n      {selectedCoordinates && (\r\n        <button className=\"distance-btn\" onClick={handleSearch}>Bekijk Afstand</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locatie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}