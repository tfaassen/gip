{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teun.faassen\\\\gip\\\\gip_project\\\\geozoekkr\\\\geozoekkr-frontend\\\\src\\\\pages\\\\Locatie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport '../styles/style_locatie.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Locatie = () => {\n  _s();\n  const startTimer = duration => {\n    // Define your startTimer function here\n  };\n\n  // Define the initMap function globally\n  window.initMap = () => {\n    let gameMode = localStorage.getItem(\"gameMode\") || \"classic\";\n    if (gameMode === \"timeLimit\") {\n      startTimer(60); // 1 minuut in plaats van 2m30\n    } else if (gameMode === \"team\") {\n      alert(\"Team modus: Speel om de hoogste gezamenlijke score te halen!\");\n    }\n    let panorama;\n    const streetViewService = new window.google.maps.StreetViewService();\n    const streetViewContainer = document.getElementById('street-view');\n    const mapContainer = document.getElementById('map-container');\n    const toggleMapButton = document.getElementById('toggle-map');\n    const mapElement = document.getElementById('map');\n    const searchButton = document.getElementById('search-button');\n    let map;\n    let marker = null;\n    let selectedCoordinates = null;\n    let streetViewStartCoordinates = null;\n\n    // Startlocatie (bijv. een specifieke locatie)\n    const startCoordinates = {\n      lat: 52.379189,\n      lng: 4.900826\n    }; // Amsterdam als voorbeeld\n\n    // Functie om een willekeurige locatie te genereren\n    function getRandomLocation() {\n      const lat = (Math.random() * 180 - 90).toFixed(6);\n      const lng = (Math.random() * 360 - 180).toFixed(6);\n      return {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng)\n      };\n    }\n\n    // Functie om een Street View panorama te laden\n    function loadStreetView(location) {\n      streetViewService.getPanorama({\n        location: location,\n        radius: 5000\n      }, (data, status) => {\n        if (status === window.google.maps.StreetViewStatus.OK) {\n          streetViewStartCoordinates = {\n            lat: data.location.latLng.lat(),\n            lng: data.location.latLng.lng()\n          };\n          panorama = new window.google.maps.StreetViewPanorama(streetViewContainer, {\n            position: data.location.latLng,\n            pov: {\n              heading: 0,\n              pitch: 0\n            },\n            zoom: 1,\n            fullscreenControl: false,\n            enableCloseButton: false,\n            addressControl: false,\n            linksControl: false,\n            showRoadLabels: false\n          });\n          if (!timerStarted) {\n            startTimer();\n            timerStarted = true;\n          } // Zorg ervoor dat de timer niet meerdere keren start\n        } else {\n          console.log(\"Geen Street View gevonden op locatie:\", location);\n          findRandomStreetView();\n        }\n      });\n    }\n\n    // Functie om een willekeurige locatie te vinden\n    function findRandomStreetView() {\n      const randomLocation = getRandomLocation();\n      loadStreetView(randomLocation);\n    }\n\n    // Functie om de afstand tussen twee coördinaten te berekenen\n    function calculateDistance(coord1, coord2) {\n      const R = 6371; // Straal van de aarde in kilometers\n      const dLat = degreesToRadians(coord2.lat - coord1.lat);\n      const dLng = degreesToRadians(coord2.lng - coord1.lng);\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(degreesToRadians(coord1.lat)) * Math.cos(degreesToRadians(coord2.lat)) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      return R * c; // Afstand in kilometers\n    }\n\n    // Hulpfunctie om graden naar radialen te converteren\n    function degreesToRadians(degrees) {\n      return degrees * (Math.PI / 180);\n    }\n\n    // Toggle de kaartweergave\n    toggleMapButton.addEventListener('click', () => {\n      const isCollapsed = mapContainer.classList.toggle('collapsed');\n      toggleMapButton.textContent = isCollapsed ? '▲' : '▼'; // Verandert de tekst van de knop\n    });\n    map = new window.google.maps.Map(mapElement, {\n      zoom: 1,\n      center: startCoordinates,\n      disableDefaultUI: true\n    });\n\n    // Voeg een kliklistener toe aan de kaart\n    map.addListener('click', event => {\n      const clickedLocation = event.latLng;\n      if (marker) {\n        marker.setPosition(clickedLocation);\n      } else {\n        marker = new window.google.maps.Marker({\n          position: clickedLocation,\n          map: map\n        });\n      }\n      selectedCoordinates = {\n        lat: clickedLocation.lat().toFixed(6),\n        lng: clickedLocation.lng().toFixed(6)\n      };\n\n      // Zorg ervoor dat de zoekknop zichtbaar wordt\n      searchButton.style.display = 'block'; // De knop wordt zichtbaar na een klik op de kaart\n    });\n\n    // Start de zoektocht naar een willekeurige Street View\n    findRandomStreetView();\n    let timerStarted = false; // Controleer of de timer al gestart is\n    let startTime;\n    let elapsedTime = 0;\n    const TIME_LIMIT = 150; // 2 minuten en 30 seconden 150 seconden\n    const timerElement = document.getElementById(\"timer\");\n    window.onload = function () {\n      startTime = Date.now();\n      updateTimer();\n    };\n    function updateTimer() {\n      function update() {\n        elapsedTime = Math.floor((Date.now() - startTime) / 1000);\n        let remainingTime = TIME_LIMIT - elapsedTime;\n        const progressBarFill = document.getElementById('progress-bar-fill');\n        const progressPercentage = remainingTime / TIME_LIMIT * 100;\n        progressBarFill.style.width = `${progressPercentage}%`;\n        if (remainingTime <= 0) {\n          clearInterval(interval);\n          lockStreetView();\n          timerElement.textContent = \"0:00\";\n          timerElement.style.color = \"red\"; // Maak de timer rood als de tijd op is\n          return;\n        }\n        if (remainingTime <= 30) {\n          timerElement.style.color = \"orange\";\n        }\n        let minutes = Math.floor(remainingTime / 60);\n        let seconds = remainingTime % 60;\n        timerElement.textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n      }\n      update();\n      let interval = setInterval(update, 1000);\n    }\n    function lockStreetView() {\n      if (panorama) {\n        panorama.setOptions({\n          disableDefaultUI: true,\n          // Verwijder alle UI-knoppen\n          scrollwheel: true,\n          panControl: false,\n          // Verwijder pan-controle\n          zoomControl: false,\n          // Verwijder zoom-controle\n          draggable: false,\n          // Maak de kaart niet versleepbaar\n          linksControl: false,\n          // Voorkom dat gebruikers naar andere locaties springen\n          motionTracking: false,\n          // Schakel bewegingsdetectie (mobiel) uit\n          motionTrackingControl: false,\n          // Verberg bewegingsdetectie-knop\n          clickToGo: false,\n          keyboardShortcuts: false\n        });\n        window.addEventListener('keydown', event => {\n          if ((event.key === 'ArrowUp' ||\n          // Move forward\n          event.key === 'ArrowDown' ||\n          // Move forward\n          event.key === 'ArrowLeft' ||\n          // Pan left\n          event.key === 'ArrowRight' ||\n          // Pan right\n          event.key === '+' ||\n          // Zoom in\n          event.key === '=' ||\n          // Zoom in\n          event.key === '_' ||\n          // Zoom out\n          event.key === '-' // Zoom out\n          ) && !event.metaKey && !event.altKey && !event.ctrlKey) {\n            event.stopPropagation();\n          }\n          ;\n        }, {\n          capture: true\n        });\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n      }\n    }\n    function stopTimer() {\n      return Math.min(elapsedTime, TIME_LIMIT);\n    }\n    function calculateScore(distance) {\n      let score = 5000;\n      if (distance <= 4) {\n        score -= distance * 0;\n      } else if (distance <= 10) {\n        score -= 4 * 0 + (distance - 4) * 1;\n      } else if (distance <= 100) {\n        score -= 6 * 1 + (distance - 10) * 5;\n      } else if (distance <= 1000) {\n        score -= 100 * 5 + (distance - 100) * 10;\n      } else {\n        score -= 100 * 5 + (distance - 100) * 15;\n      }\n      return Math.max(Math.round(score), 0); // Zorg dat de score niet negatief wordt\n    }\n\n    // Zoekknop event listener (bestaand script aanpassen)\n    searchButton.addEventListener('click', () => {\n      if (selectedCoordinates && streetViewStartCoordinates) {\n        const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\n        const searchTime = stopTimer();\n        const score = calculateScore(distance);\n\n        // Redirect naar resultaat.html met alle gegevens\n        window.location.href = `/resultaat?distance=${distance.toFixed(2)}&startLat=${streetViewStartCoordinates.lat}&startLng=${streetViewStartCoordinates.lng}&selectedLat=${selectedCoordinates.lat}&selectedLng=${selectedCoordinates.lng}&time=${searchTime}&score=${score}`;\n      }\n    });\n  };\n  useEffect(() => {\n    var _obj;\n    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n    console.log(\"API Key:\", apiKey); // Log the API key to check if it's loaded correctly\n    console.log((_obj = obj) === null || _obj === void 0 ? void 0 : _obj.Ro); // Voorkomt de fout als obj undefined is\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=&v=weekly&callback=initMap`;\n    script.async = true;\n    document.head.appendChild(script);\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer-container\",\n      children: [\"Tijd over: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"timer\",\n        children: \"2:30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"progress-bar-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"street-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"search-button\",\n      children: \"Bekijk Afstand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map-container\",\n      className: \"collapsed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toggle-map\",\n        children: \"\\u25B2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(Locatie, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Locatie;\nexport default Locatie;\nvar _c;\n$RefreshReg$(_c, \"Locatie\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Locatie","_s","startTimer","duration","window","initMap","gameMode","localStorage","getItem","alert","panorama","streetViewService","google","maps","StreetViewService","streetViewContainer","document","getElementById","mapContainer","toggleMapButton","mapElement","searchButton","map","marker","selectedCoordinates","streetViewStartCoordinates","startCoordinates","lat","lng","getRandomLocation","Math","random","toFixed","parseFloat","loadStreetView","location","getPanorama","radius","data","status","StreetViewStatus","OK","latLng","StreetViewPanorama","position","pov","heading","pitch","zoom","fullscreenControl","enableCloseButton","addressControl","linksControl","showRoadLabels","timerStarted","console","log","findRandomStreetView","randomLocation","calculateDistance","coord1","coord2","R","dLat","degreesToRadians","dLng","a","sin","cos","c","atan2","sqrt","degrees","PI","addEventListener","isCollapsed","classList","toggle","textContent","Map","center","disableDefaultUI","addListener","event","clickedLocation","setPosition","Marker","style","display","startTime","elapsedTime","TIME_LIMIT","timerElement","onload","Date","now","updateTimer","update","floor","remainingTime","progressBarFill","progressPercentage","width","clearInterval","interval","lockStreetView","color","minutes","seconds","setInterval","setOptions","scrollwheel","panControl","zoomControl","draggable","motionTracking","motionTrackingControl","clickToGo","keyboardShortcuts","key","metaKey","altKey","ctrlKey","stopPropagation","capture","stopTimer","min","calculateScore","distance","score","max","round","searchTime","href","_obj","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","obj","Ro","script","createElement","src","async","head","appendChild","removeChild","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/teun.faassen/gip/gip_project/geozoekkr/geozoekkr-frontend/src/pages/Locatie.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../styles/style_locatie.css';\r\n\r\nconst Locatie = () => {\r\n  const startTimer = (duration) => {\r\n    // Define your startTimer function here\r\n  };\r\n\r\n  // Define the initMap function globally\r\n  window.initMap = () => {\r\n    let gameMode = localStorage.getItem(\"gameMode\") || \"classic\";\r\n\r\n    if (gameMode === \"timeLimit\") {\r\n        startTimer(60); // 1 minuut in plaats van 2m30\r\n    } else if (gameMode === \"team\") {\r\n        alert(\"Team modus: Speel om de hoogste gezamenlijke score te halen!\");\r\n    }\r\n    let panorama;\r\n    const streetViewService = new window.google.maps.StreetViewService();\r\n    const streetViewContainer = document.getElementById('street-view');\r\n    const mapContainer = document.getElementById('map-container');\r\n    const toggleMapButton = document.getElementById('toggle-map');\r\n    const mapElement = document.getElementById('map');\r\n    const searchButton = document.getElementById('search-button');\r\n    \r\n    let map;\r\n    let marker = null;\r\n    let selectedCoordinates = null;\r\n    let streetViewStartCoordinates = null;\r\n\r\n    // Startlocatie (bijv. een specifieke locatie)\r\n    const startCoordinates = { lat: 52.379189, lng: 4.900826 }; // Amsterdam als voorbeeld\r\n\r\n    // Functie om een willekeurige locatie te genereren\r\n    function getRandomLocation() {\r\n        const lat = (Math.random() * 180 - 90).toFixed(6);\r\n        const lng = (Math.random() * 360 - 180).toFixed(6);\r\n        return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n    }\r\n\r\n    // Functie om een Street View panorama te laden\r\n    function loadStreetView(location) {\r\n        streetViewService.getPanorama(\r\n            { location: location, radius: 5000 },\r\n            (data, status) => {\r\n                if (status === window.google.maps.StreetViewStatus.OK) {\r\n                    streetViewStartCoordinates = {\r\n                        lat: data.location.latLng.lat(),\r\n                        lng: data.location.latLng.lng(),\r\n                    };\r\n\r\n                    panorama = new window.google.maps.StreetViewPanorama(streetViewContainer, {\r\n                        position: data.location.latLng,\r\n                        pov: { heading: 0, pitch: 0 },\r\n                        zoom: 1,\r\n                        fullscreenControl: false,\r\n                        enableCloseButton: false,\r\n                        addressControl: false,\r\n                        linksControl: false,\r\n                        showRoadLabels: false,\r\n                    });\r\n                    if (!timerStarted) {\r\n                        startTimer();\r\n                        timerStarted = true;} // Zorg ervoor dat de timer niet meerdere keren start\r\n                } else {\r\n                    console.log(\"Geen Street View gevonden op locatie:\", location);\r\n                    findRandomStreetView();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // Functie om een willekeurige locatie te vinden\r\n    function findRandomStreetView() {\r\n        const randomLocation = getRandomLocation();\r\n        loadStreetView(randomLocation);\r\n    }\r\n\r\n    // Functie om de afstand tussen twee coördinaten te berekenen\r\n    function calculateDistance(coord1, coord2) {\r\n        const R = 6371; // Straal van de aarde in kilometers\r\n        const dLat = degreesToRadians(coord2.lat - coord1.lat);\r\n        const dLng = degreesToRadians(coord2.lng - coord1.lng);\r\n        const a =\r\n            Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n            Math.cos(degreesToRadians(coord1.lat)) *\r\n            Math.cos(degreesToRadians(coord2.lat)) *\r\n            Math.sin(dLng / 2) *\r\n            Math.sin(dLng / 2);\r\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n        return R * c; // Afstand in kilometers\r\n    }\r\n\r\n    // Hulpfunctie om graden naar radialen te converteren\r\n    function degreesToRadians(degrees) {\r\n        return degrees * (Math.PI / 180);\r\n    }\r\n\r\n    // Toggle de kaartweergave\r\n    toggleMapButton.addEventListener('click', () => {\r\n        const isCollapsed = mapContainer.classList.toggle('collapsed');\r\n        toggleMapButton.textContent = isCollapsed ? '▲' : '▼'; // Verandert de tekst van de knop\r\n    });\r\n\r\n    map = new window.google.maps.Map(mapElement, {\r\n        zoom: 1,\r\n        center: startCoordinates,\r\n        disableDefaultUI: true,\r\n    });\r\n\r\n    // Voeg een kliklistener toe aan de kaart\r\n    map.addListener('click', (event) => {\r\n        const clickedLocation = event.latLng;\r\n\r\n        if (marker) {\r\n            marker.setPosition(clickedLocation);\r\n        } else {\r\n            marker = new window.google.maps.Marker({\r\n                position: clickedLocation,\r\n                map: map,\r\n            });\r\n        }\r\n\r\n        selectedCoordinates = {\r\n            lat: clickedLocation.lat().toFixed(6),\r\n            lng: clickedLocation.lng().toFixed(6),\r\n        };\r\n\r\n        // Zorg ervoor dat de zoekknop zichtbaar wordt\r\n        searchButton.style.display = 'block'; // De knop wordt zichtbaar na een klik op de kaart\r\n    });\r\n\r\n    // Start de zoektocht naar een willekeurige Street View\r\n    findRandomStreetView();\r\n\r\n    let timerStarted = false; // Controleer of de timer al gestart is\r\n    let startTime;\r\n    let elapsedTime = 0; \r\n    const TIME_LIMIT = 150; // 2 minuten en 30 seconden 150 seconden\r\n    const timerElement = document.getElementById(\"timer\");\r\n\r\n    window.onload = function () {\r\n        startTime = Date.now();\r\n        updateTimer();\r\n    };\r\n    function updateTimer() {\r\n        function update() {\r\n            elapsedTime = Math.floor((Date.now() - startTime) / 1000);\r\n            let remainingTime = TIME_LIMIT - elapsedTime;\r\n\r\n            const progressBarFill = document.getElementById('progress-bar-fill');\r\n            const progressPercentage = (remainingTime / TIME_LIMIT) * 100;\r\n            progressBarFill.style.width = `${progressPercentage}%`;\r\n\r\n            if (remainingTime <= 0) {\r\n                clearInterval(interval);\r\n                lockStreetView();\r\n                timerElement.textContent = \"0:00\";\r\n                timerElement.style.color = \"red\"; // Maak de timer rood als de tijd op is\r\n                return;\r\n            }if (remainingTime <= 30) {\r\n                timerElement.style.color = \"orange\";\r\n            }\r\n            let minutes = Math.floor(remainingTime / 60);\r\n            let seconds = remainingTime % 60;\r\n            timerElement.textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n        }\r\n        update();\r\n        let interval = setInterval(update, 1000);\r\n    }\r\n    function lockStreetView() {\r\n        if (panorama) {\r\n            panorama.setOptions({\r\n                disableDefaultUI: true, // Verwijder alle UI-knoppen\r\n                scrollwheel: true, \r\n                panControl: false, // Verwijder pan-controle\r\n                zoomControl: false, // Verwijder zoom-controle\r\n                draggable: false, // Maak de kaart niet versleepbaar\r\n                linksControl: false, // Voorkom dat gebruikers naar andere locaties springen\r\n                motionTracking: false, // Schakel bewegingsdetectie (mobiel) uit\r\n                motionTrackingControl: false, // Verberg bewegingsdetectie-knop\r\n                clickToGo: false,\r\n                keyboardShortcuts: false\r\n            });\r\n            window.addEventListener(\r\n                'keydown',\r\n                (event) => {\r\n                    if (\r\n                    (\r\n                        event.key === 'ArrowUp' || // Move forward\r\n                        event.key === 'ArrowDown' || // Move forward\r\n                        event.key === 'ArrowLeft' || // Pan left\r\n                        event.key === 'ArrowRight' || // Pan right\r\n                        event.key === '+' || // Zoom in\r\n                        event.key === '=' || // Zoom in\r\n                        event.key === '_' || // Zoom out\r\n                        event.key === '-' // Zoom out\r\n                    ) &&\r\n                    !event.metaKey &&\r\n                    !event.altKey &&\r\n                    !event.ctrlKey\r\n                    ) {\r\n                    event.stopPropagation()\r\n                    };\r\n                },\r\n            { capture: true },\r\n        );\r\n            alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n        }\r\n    }\r\n    function stopTimer() {\r\n        return Math.min(elapsedTime, TIME_LIMIT);\r\n    }\r\n    function calculateScore(distance) {\r\n        let score = 5000;\r\n        if (distance <= 4) {\r\n            score -= distance * 0;\r\n        }\r\n        else if (distance <= 10) {\r\n        score -= (4 * 0) + ((distance -4) * 1);\r\n        }\r\n        else if (distance <= 100) {\r\n            score -= (6 * 1) +((distance - 10) * 5);\r\n        }\r\n        else if (distance <= 1000) {\r\n            score -= (100 * 5) + ((distance - 100) * 10);                \r\n        }\r\n         else {\r\n            score -= (100 * 5) + ((distance - 100) * 15);\r\n        }\r\n        return Math.max(Math.round(score), 0); // Zorg dat de score niet negatief wordt\r\n    }\r\n\r\n    // Zoekknop event listener (bestaand script aanpassen)\r\n    searchButton.addEventListener('click', () => {\r\n        if (selectedCoordinates && streetViewStartCoordinates) {\r\n            const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\r\n            const searchTime = stopTimer();\r\n            const score = calculateScore(distance);\r\n\r\n            // Redirect naar resultaat.html met alle gegevens\r\n            window.location.href = `/resultaat?distance=${distance.toFixed(2)}&startLat=${streetViewStartCoordinates.lat}&startLng=${streetViewStartCoordinates.lng}&selectedLat=${selectedCoordinates.lat}&selectedLng=${selectedCoordinates.lng}&time=${searchTime}&score=${score}`;\r\n        }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n    console.log(\"API Key:\", apiKey); // Log the API key to check if it's loaded correctly\r\n    console.log(obj?.Ro); // Voorkomt de fout als obj undefined is\r\n    const script = document.createElement('script');\r\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=&v=weekly&callback=initMap`;\r\n    script.async = true;\r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      document.head.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"timer-container\">\r\n        Tijd over: <span id=\"timer\">2:30</span>\r\n        <div className=\"progress-bar\">\r\n          <span id=\"progress-bar-fill\"></span>\r\n        </div>\r\n      </div>\r\n      <div id=\"street-view\"></div>\r\n      <button id=\"search-button\">Bekijk Afstand</button>\r\n      <div id=\"map-container\" className=\"collapsed\">\r\n        <div id=\"toggle-map\">▲</div>\r\n        <div id=\"map\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locatie;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}