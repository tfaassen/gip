{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teun.faassen\\\\gip\\\\gip_project\\\\geozoekkr\\\\geozoekkr-frontend\\\\src\\\\pages\\\\Locatie.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/style_locatie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst startTimer = duration => {\n  // Define your startTimer function here\n};\nconst Locatie = () => {\n  _s();\n  const [timer, setTimer] = useState(150);\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\n  const [panorama, setPanorama] = useState(null);\n  const [mapExpanded, setMapExpanded] = useState(false);\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const timerInterval = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\n      script.async = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        window.initMap();\n      };\n    } else {\n      window.initMap();\n    }\n    return () => {\n      clearInterval(timerInterval.current);\n    };\n  }, [apiKey]);\n  window.initMap = () => {\n    const streetViewService = new window.google.maps.StreetViewService();\n    const startCoordinates = {\n      lat: 52.379189,\n      lng: 4.900826\n    };\n    let map;\n    let marker = null;\n    function getRandomLocation() {\n      const lat = (Math.random() * 180 - 90).toFixed(6);\n      const lng = (Math.random() * 360 - 180).toFixed(6);\n      return {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng)\n      };\n    }\n    function loadStreetView(location) {\n      streetViewService.getPanorama({\n        location,\n        radius: 5000\n      }, (data, status) => {\n        if (status === window.google.maps.StreetViewStatus.OK) {\n          setStreetViewStartCoordinates({\n            lat: data.location.latLng.lat(),\n            lng: data.location.latLng.lng()\n          });\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(document.getElementById(\"street-view\"), {\n            position: data.location.latLng,\n            pov: {\n              heading: 0,\n              pitch: 0\n            },\n            zoom: 1,\n            fullscreenControl: false,\n            enableCloseButton: false,\n            addressControl: false,\n            linksControl: false,\n            showRoadLabels: false\n          });\n          setPanorama(panoramaInstance);\n          startTimer();\n        } else {\n          console.log(\"Geen Street View gevonden op locatie:\", location);\n          findRandomStreetView();\n        }\n      });\n    }\n    function findRandomStreetView() {\n      loadStreetView(getRandomLocation());\n    }\n    function startTimer() {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            clearInterval(timerInterval.current);\n            lockStreetView();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    function lockStreetView() {\n      if (panorama) {\n        panorama.setOptions({\n          disableDefaultUI: true,\n          draggable: false,\n          linksControl: false,\n          motionTracking: false,\n          motionTrackingControl: false,\n          clickToGo: false,\n          keyboardShortcuts: false\n        });\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n      }\n    }\n    toggleMapButton.addEventListener('click', () => {\n      const isCollapsed = mapContainer.classList.toggle('collapsed');\n      toggleMapButton.textContent = isCollapsed ? '▲' : '▼'; // Verandert de tekst van de knop\n    });\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 1,\n      center: startCoordinates,\n      disableDefaultUI: true\n    });\n    map.addListener(\"click\", event => {\n      if (marker) {\n        marker.setPosition(event.latLng);\n      } else {\n        marker = new window.google.maps.Marker({\n          position: event.latLng,\n          map: map\n        });\n      }\n      setSelectedCoordinates({\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      });\n      searchButton.style.display = 'block'; // De knop wordt zichtbaar na een klik op de kaart\n    });\n    findRandomStreetView();\n  };\n  function calculateDistance(coord1, coord2) {\n    if (!coord1 || !coord2) {\n      console.error(\"Ongeldige coördinaten:\", coord1, coord2);\n      return 0;\n    }\n    const R = 6371; // Aarde straal in km\n    const dLat = (coord2.lat - coord1.lat) * Math.PI / 180;\n    const dLng = (coord2.lng - coord1.lng) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.lat * Math.PI / 180) * Math.cos(coord2.lat * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const distance = R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n    console.log(\"Bereken afstand:\", distance);\n    return Number.isFinite(distance) ? distance : 0;\n  }\n  let timerStarted = false; // Controleer of de timer al gestart is\n  let startTime;\n  let streetViewLocked = false;\n  let elapsedTime = 0;\n  const TIME_LIMIT = 150; // 2 minuten en 30 seconden 150 seconden\n  const timerElement = document.getElementById(\"timer\");\n  window.onload = function () {\n    startTime = Date.now();\n    updateTimer();\n  };\n  function updateTimer() {\n    function update() {\n      elapsedTime = Math.floor((Date.now() - startTime) / 1000);\n      let remainingTime = TIME_LIMIT - elapsedTime;\n      const progressBarFill = document.getElementById('progress-bar-fill');\n      const progressPercentage = remainingTime / TIME_LIMIT * 100;\n      progressBarFill.style.width = `${progressPercentage}%`;\n      if (remainingTime <= 0) {\n        clearInterval(interval);\n        lockStreetView();\n        timerElement.textContent = \"0:00\";\n        timerElement.style.color = \"red\"; // Maak de timer rood als de tijd op is\n        return;\n      }\n      if (remainingTime <= 30) {\n        timerElement.style.color = \"orange\";\n      }\n      let minutes = Math.floor(remainingTime / 60);\n      let seconds = remainingTime % 60;\n      timerElement.textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n    }\n    update();\n    let interval = setInterval(update, 1000);\n  }\n  function lockStreetView() {\n    if (panorama) {\n      panorama.setOptions({\n        disableDefaultUI: true,\n        // Verwijder alle UI-knoppen\n        scrollwheel: true,\n        panControl: false,\n        // Verwijder pan-controle\n        zoomControl: false,\n        // Verwijder zoom-controle\n        draggable: false,\n        // Maak de kaart niet versleepbaar\n        linksControl: false,\n        // Voorkom dat gebruikers naar andere locaties springen\n        motionTracking: false,\n        // Schakel bewegingsdetectie (mobiel) uit\n        motionTrackingControl: false,\n        // Verberg bewegingsdetectie-knop\n        clickToGo: false,\n        keyboardShortcuts: false\n      });\n      window.addEventListener('keydown', event => {\n        if ((event.key === 'ArrowUp' ||\n        // Move forward\n        event.key === 'ArrowDown' ||\n        // Move forward\n        event.key === 'ArrowLeft' ||\n        // Pan left\n        event.key === 'ArrowRight' ||\n        // Pan right\n        event.key === '+' ||\n        // Zoom in\n        event.key === '=' ||\n        // Zoom in\n        event.key === '_' ||\n        // Zoom out\n        event.key === '-' // Zoom out\n        ) && !event.metaKey && !event.altKey && !event.ctrlKey) {\n          event.stopPropagation();\n        }\n        ;\n      }, {\n        capture: true\n      });\n      alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n    }\n  }\n  function stopTimer() {\n    return Math.min(elapsedTime, TIME_LIMIT);\n  }\n  function calculateScore(distance) {\n    let score = 5000;\n    if (distance <= 4) {\n      score -= distance * 0;\n    } else if (distance <= 10) {\n      score -= 4 * 0 + (distance - 4) * 1;\n    } else if (distance <= 100) {\n      score -= 6 * 1 + (distance - 10) * 5;\n    } else if (distance <= 1000) {\n      score -= 100 * 5 + (distance - 100) * 10;\n    } else {\n      score -= 100 * 5 + (distance - 100) * 15;\n    }\n    return Math.max(Math.round(score), 0); // Zorg dat de score niet negatief wordt\n  }\n  function handleSearch() {\n    searchButton.addEventListener('click', () => {\n      if (selectedCoordinates && streetViewStartCoordinates) {\n        const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\n        const searchTime = stopTimer();\n        const score = calculateScore(distance);\n\n        // Redirect naar resultaat.html met alle gegevens\n        window.location.href = `resultaat.html?distance=${distance.toFixed(2)}&startLat=${streetViewStartCoordinates.lat}&startLng=${streetViewStartCoordinates.lng}&selectedLat=${selectedCoordinates.lat}&selectedLng=${selectedCoordinates.lng}&time=${searchTime}&score=${score}`;\n        console.log(\"Afstand berekend:\", distance); // Debugging\n\n        if (typeof distance !== \"number\" || isNaN(distance)) {\n          console.error(\"Ongeldige afstand:\", distance);\n          return; // Voorkom navigatie met een ongeldige waarde\n        }\n        navigate(\"/resultaat\", {\n          state: {\n            distance\n          }\n        });\n      } else {\n        console.warn(\"Geen coördinaten geselecteerd!\");\n      }\n    }, {\n      once: true\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer-container\",\n      children: [\"Tijd over: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"timer\",\n        children: \"2:30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"progress-bar-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"street-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map-container\",\n      className: mapExpanded ? \"expanded\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-map-btn\",\n        onClick: () => setMapExpanded(!mapExpanded),\n        children: \"\\uD83D\\uDDFA\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), selectedCoordinates && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"distance-btn\",\n      onClick: handleSearch,\n      children: \"Bekijk Afstand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 9\n  }, this);\n};\n_s(Locatie, \"2RtRt6fl/MZP6GpBgWRV+m3RV+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Locatie;\nexport default Locatie;\nvar _c;\n$RefreshReg$(_c, \"Locatie\");","map":{"version":3,"names":["useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","startTimer","duration","Locatie","_s","timer","setTimer","selectedCoordinates","setSelectedCoordinates","streetViewStartCoordinates","setStreetViewStartCoordinates","panorama","setPanorama","mapExpanded","setMapExpanded","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","timerInterval","navigate","window","google","script","document","createElement","src","async","body","appendChild","onload","initMap","clearInterval","current","streetViewService","maps","StreetViewService","startCoordinates","lat","lng","map","marker","getRandomLocation","Math","random","toFixed","parseFloat","loadStreetView","location","getPanorama","radius","data","status","StreetViewStatus","OK","latLng","panoramaInstance","StreetViewPanorama","getElementById","position","pov","heading","pitch","zoom","fullscreenControl","enableCloseButton","addressControl","linksControl","showRoadLabels","console","log","findRandomStreetView","setInterval","prev","lockStreetView","setOptions","disableDefaultUI","draggable","motionTracking","motionTrackingControl","clickToGo","keyboardShortcuts","alert","toggleMapButton","addEventListener","isCollapsed","mapContainer","classList","toggle","textContent","Map","center","addListener","event","setPosition","Marker","searchButton","style","display","calculateDistance","coord1","coord2","error","R","dLat","PI","dLng","a","sin","cos","distance","atan2","sqrt","Number","isFinite","timerStarted","startTime","streetViewLocked","elapsedTime","TIME_LIMIT","timerElement","Date","now","updateTimer","update","floor","remainingTime","progressBarFill","progressPercentage","width","interval","color","minutes","seconds","scrollwheel","panControl","zoomControl","key","metaKey","altKey","ctrlKey","stopPropagation","capture","stopTimer","min","calculateScore","score","max","round","handleSearch","searchTime","href","isNaN","state","warn","once","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/teun.faassen/gip/gip_project/geozoekkr/geozoekkr-frontend/src/pages/Locatie.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/style_locatie.css\";\r\nconst startTimer = (duration) => {\r\n    // Define your startTimer function here\r\n  };\r\nconst Locatie = () => {\r\n  const [timer, setTimer] = useState(150);\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\r\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\r\n  const [panorama, setPanorama] = useState(null);\r\n  const [mapExpanded, setMapExpanded] = useState(false);\r\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n  const timerInterval = useRef(null);\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    if (!window.google) {\r\n      const script = document.createElement(\"script\");\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\r\n      script.async = true;\r\n      document.body.appendChild(script);\r\n      script.onload = () => {\r\n        window.initMap();\r\n      };\r\n    } else {\r\n      window.initMap();\r\n    }\r\n    return () => {\r\n      clearInterval(timerInterval.current);\r\n    };\r\n  }, [apiKey]);\r\n\r\n  window.initMap = () => {\r\n    const streetViewService = new window.google.maps.StreetViewService();\r\n    const startCoordinates = { lat: 52.379189, lng: 4.900826 };\r\n    let map;\r\n    let marker = null;\r\n    \r\n    function getRandomLocation() {\r\n      const lat = (Math.random() * 180 - 90).toFixed(6);\r\n      const lng = (Math.random() * 360 - 180).toFixed(6);\r\n      return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n    }\r\n\r\n    function loadStreetView(location) {\r\n      streetViewService.getPanorama({ location, radius: 5000 }, (data, status) => {\r\n        if (status === window.google.maps.StreetViewStatus.OK) {\r\n          setStreetViewStartCoordinates({\r\n            lat: data.location.latLng.lat(),\r\n            lng: data.location.latLng.lng(),\r\n          });\r\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(\r\n            document.getElementById(\"street-view\"),\r\n            {\r\n              position: data.location.latLng,\r\n              pov: { heading: 0, pitch: 0 },\r\n              zoom: 1,\r\n              fullscreenControl: false,\r\n              enableCloseButton: false,\r\n              addressControl: false,\r\n              linksControl: false,\r\n              showRoadLabels: false,\r\n            }\r\n          );\r\n          setPanorama(panoramaInstance);\r\n          startTimer();\r\n          \r\n        } else {\r\n            console.log(\"Geen Street View gevonden op locatie:\", location);\r\n          findRandomStreetView();\r\n        }\r\n      });\r\n    }\r\n\r\n    function findRandomStreetView() {\r\n      loadStreetView(getRandomLocation());\r\n    }\r\n\r\n    function startTimer() {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(timerInterval.current);\r\n            lockStreetView();\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    function lockStreetView() {\r\n      if (panorama) {\r\n        panorama.setOptions({\r\n          disableDefaultUI: true,\r\n          draggable: false,\r\n          linksControl: false,\r\n          motionTracking: false,\r\n          motionTrackingControl: false,\r\n          clickToGo: false,\r\n          keyboardShortcuts: false,\r\n        });\r\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n      }\r\n    }\r\n    toggleMapButton.addEventListener('click', () => {\r\n        const isCollapsed = mapContainer.classList.toggle('collapsed');\r\n        toggleMapButton.textContent = isCollapsed ? '▲' : '▼'; // Verandert de tekst van de knop\r\n    });\r\n\r\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      zoom: 1,\r\n      center: startCoordinates,\r\n      disableDefaultUI: true,\r\n    });\r\n\r\n    map.addListener(\"click\", (event) => {\r\n      if (marker) {\r\n        marker.setPosition(event.latLng);\r\n      } else {\r\n        marker = new window.google.maps.Marker({\r\n          position: event.latLng,\r\n          map: map,\r\n        });\r\n      }\r\n      setSelectedCoordinates({ lat: event.latLng.lat(), lng: event.latLng.lng() });\r\n      searchButton.style.display = 'block'; // De knop wordt zichtbaar na een klik op de kaart\r\n    });\r\n\r\n    findRandomStreetView();\r\n  };\r\n\r\n  function calculateDistance(coord1, coord2) {\r\n    if (!coord1 || !coord2) {\r\n        console.error(\"Ongeldige coördinaten:\", coord1, coord2);\r\n        return 0;\r\n    }\r\n    const R = 6371; // Aarde straal in km\r\n    const dLat = ((coord2.lat - coord1.lat) * Math.PI) / 180;\r\n    const dLng = ((coord2.lng - coord1.lng) * Math.PI) / 180;\r\n    const a =\r\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos((coord1.lat * Math.PI) / 180) *\r\n        Math.cos((coord2.lat * Math.PI) / 180) *\r\n        Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const distance = R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\r\n    \r\n    console.log(\"Bereken afstand:\", distance);\r\n    return Number.isFinite(distance) ? distance : 0;\r\n}\r\nlet timerStarted = false; // Controleer of de timer al gestart is\r\n            let startTime;\r\n            let streetViewLocked = false;\r\n            let elapsedTime = 0; \r\n            const TIME_LIMIT = 150; // 2 minuten en 30 seconden 150 seconden\r\n            const timerElement = document.getElementById(\"timer\");\r\n\r\n\r\n            window.onload = function () {\r\n                startTime = Date.now();\r\n                updateTimer();\r\n            };\r\n            function updateTimer() {\r\n                function update() {\r\n                    elapsedTime = Math.floor((Date.now() - startTime) / 1000);\r\n                    let remainingTime = TIME_LIMIT - elapsedTime;\r\n\r\n                    const progressBarFill = document.getElementById('progress-bar-fill');\r\n                    const progressPercentage = (remainingTime / TIME_LIMIT) * 100;\r\n                    progressBarFill.style.width = `${progressPercentage}%`;\r\n\r\n                    if (remainingTime <= 0) {\r\n                        clearInterval(interval);\r\n                        lockStreetView();\r\n                        timerElement.textContent = \"0:00\";\r\n                        timerElement.style.color = \"red\"; // Maak de timer rood als de tijd op is\r\n                        return;\r\n                    }if (remainingTime <= 30) {\r\n                        timerElement.style.color = \"orange\";\r\n                    }\r\n                    let minutes = Math.floor(remainingTime / 60);\r\n                    let seconds = remainingTime % 60;\r\n                    timerElement.textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n                }\r\n                update();\r\n                let interval = setInterval(update, 1000);\r\n            }\r\n            function lockStreetView() {\r\n                if (panorama) {\r\n                    panorama.setOptions({\r\n                        disableDefaultUI: true, // Verwijder alle UI-knoppen\r\n                        scrollwheel: true, \r\n                        panControl: false, // Verwijder pan-controle\r\n                        zoomControl: false, // Verwijder zoom-controle\r\n                        draggable: false, // Maak de kaart niet versleepbaar\r\n                        linksControl: false, // Voorkom dat gebruikers naar andere locaties springen\r\n                        motionTracking: false, // Schakel bewegingsdetectie (mobiel) uit\r\n                        motionTrackingControl: false, // Verberg bewegingsdetectie-knop\r\n                        clickToGo: false,\r\n                        keyboardShortcuts: false\r\n                    });\r\n                    window.addEventListener(\r\n                        'keydown',\r\n                        (event) => {\r\n                            if (\r\n                            (\r\n                                event.key === 'ArrowUp' || // Move forward\r\n                                event.key === 'ArrowDown' || // Move forward\r\n                                event.key === 'ArrowLeft' || // Pan left\r\n                                event.key === 'ArrowRight' || // Pan right\r\n                                event.key === '+' || // Zoom in\r\n                                event.key === '=' || // Zoom in\r\n                                event.key === '_' || // Zoom out\r\n                                event.key === '-' // Zoom out\r\n                            ) &&\r\n                            !event.metaKey &&\r\n                            !event.altKey &&\r\n                            !event.ctrlKey\r\n                            ) {\r\n                            event.stopPropagation()\r\n                            };\r\n                        },\r\n                    { capture: true },\r\n                );\r\n                    alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n                }\r\n            }\r\n            function stopTimer() {\r\n                return Math.min(elapsedTime, TIME_LIMIT);\r\n            }\r\n            function calculateScore(distance) {\r\n                let score = 5000;\r\n                if (distance <= 4) {\r\n                    score -= distance * 0;\r\n                }\r\n                else if (distance <= 10) {\r\n                score -= (4 * 0) + ((distance -4) * 1);\r\n                }\r\n                else if (distance <= 100) {\r\n                    score -= (6 * 1) +((distance - 10) * 5);\r\n                }\r\n                else if (distance <= 1000) {\r\n                    score -= (100 * 5) + ((distance - 100) * 10);                \r\n                }\r\n                 else {\r\n                    score -= (100 * 5) + ((distance - 100) * 15);\r\n                }\r\n                return Math.max(Math.round(score), 0); // Zorg dat de score niet negatief wordt\r\n            }\r\n\r\n  \r\nfunction handleSearch() {\r\n    searchButton.addEventListener('click', () => {\r\n    if (selectedCoordinates && streetViewStartCoordinates) {\r\n        const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\r\n        const searchTime = stopTimer();\r\n        const score = calculateScore(distance);\r\n\r\n        // Redirect naar resultaat.html met alle gegevens\r\n        window.location.href = `resultaat.html?distance=${distance.toFixed(2)}&startLat=${streetViewStartCoordinates.lat}&startLng=${streetViewStartCoordinates.lng}&selectedLat=${selectedCoordinates.lat}&selectedLng=${selectedCoordinates.lng}&time=${searchTime}&score=${score}`;    \r\n        console.log(\"Afstand berekend:\", distance); // Debugging\r\n            \r\n        if (typeof distance !== \"number\" || isNaN(distance)) {\r\n            console.error(\"Ongeldige afstand:\", distance);\r\n            return; // Voorkom navigatie met een ongeldige waarde\r\n        }\r\n    \r\n        navigate(\"/resultaat\", { state: { distance } });\r\n    } else {\r\n        console.warn(\"Geen coördinaten geselecteerd!\");\r\n    }\r\n}, { once: true });}\r\n  \r\n\r\n  return (\r\n        <div>\r\n            <div id=\"timer-container\">\r\n                Tijd over: <span id=\"timer\">2:30</span>\r\n            <div className=\"progress-bar\">\r\n                <span id=\"progress-bar-fill\"></span>\r\n            </div>\r\n            </div>\r\n      <div id=\"street-view\"></div>\r\n      <div id=\"map-container\" className={mapExpanded ? \"expanded\" : \"\"}>\r\n        <button className=\"toggle-map-btn\" onClick={() => setMapExpanded(!mapExpanded)}>🗺️</button>\r\n        <div id=\"map\"></div>\r\n      </div>\r\n      {selectedCoordinates && (\r\n        <button className=\"distance-btn\" onClick={handleSearch}>Bekijk Afstand</button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locatie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}