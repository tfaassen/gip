{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teun.faassen\\\\gip\\\\gip_project\\\\geozoekkr\\\\geozoekkr-frontend\\\\src\\\\pages\\\\Locatie.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/style_locatie.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Locatie = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [timer, setTimer] = useState(150);\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\n  const [panorama, setPanorama] = useState(null);\n  const [mapExpanded, setMapExpanded] = useState(false);\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const timerInterval = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!window.google) {\n      const script = document.createElement(\"script\");\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\n      script.async = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        window.initMap();\n      };\n    } else {\n      window.initMap();\n    }\n    return () => {\n      clearInterval(timerInterval.current);\n    };\n  }, [apiKey]);\n  const toggleMap = () => {\n    setMapExpanded(prev => !prev);\n  };\n  window.initMap = _s(() => {\n    _s();\n    const streetViewService = new window.google.maps.StreetViewService();\n    const startCoordinates = {\n      lat: 52.379189,\n      lng: 4.900826\n    };\n    let map;\n    let marker = null;\n    function getRandomLocation() {\n      const lat = (Math.random() * 180 - 90).toFixed(6);\n      const lng = (Math.random() * 360 - 180).toFixed(6);\n      return {\n        lat: parseFloat(lat),\n        lng: parseFloat(lng)\n      };\n    }\n    function loadStreetView(location) {\n      streetViewService.getPanorama({\n        location,\n        radius: 5000\n      }, (data, status) => {\n        if (status === window.google.maps.StreetViewStatus.OK) {\n          setStreetViewStartCoordinates({\n            lat: data.location.latLng.lat(),\n            lng: data.location.latLng.lng()\n          });\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(document.getElementById(\"street-view\"), {\n            position: data.location.latLng,\n            pov: {\n              heading: 0,\n              pitch: 0\n            },\n            zoom: 1,\n            fullscreenControl: false,\n            enableCloseButton: false,\n            addressControl: false,\n            linksControl: false,\n            showRoadLabels: false\n          });\n          setPanorama(panoramaInstance);\n          startTimer();\n        } else {\n          console.log(\"Geen Street View gevonden op locatie:\", location);\n          findRandomStreetView();\n        }\n      });\n    }\n    function findRandomStreetView() {\n      loadStreetView(getRandomLocation());\n    }\n    useEffect(() => {\n      const mapContainer = document.getElementById(\"map-container\");\n      const toggleMapButton = document.getElementById(\"toggle-map\");\n      if (mapContainer && toggleMapButton) {\n        mapContainer.classList.toggle(\"collapsed\", !mapExpanded);\n        toggleMapButton.textContent = mapExpanded ? \"▼\" : \"▲\";\n      }\n    }, [mapExpanded]);\n    function startTimer() {\n      timerInterval.current = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            clearInterval(timerInterval.current);\n            lockStreetView();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    useEffect(() => {\n      const progressBarFill = document.getElementById(\"progress-bar-fill\");\n      if (!progressBarFill) return;\n      const updateTimerDisplay = () => {\n        let remainingTime = timer;\n        const minutes = Math.floor(remainingTime / 60);\n        const seconds = remainingTime % 60;\n        document.getElementById(\"timer\").textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n\n        // Progress-bar updaten\n        const progressPercentage = remainingTime / 150 * 100;\n        progressBarFill.style.width = `${progressPercentage}%`;\n\n        // Kleur aanpassen\n        if (remainingTime <= 30) {\n          document.getElementById(\"timer\").style.color = \"orange\";\n        }\n        if (remainingTime <= 0) {\n          document.getElementById(\"timer\").style.color = \"red\";\n        }\n      };\n      updateTimerDisplay();\n    }, [timer]);\n    function lockStreetView() {\n      if (panorama) {\n        panorama.setOptions({\n          disableDefaultUI: true,\n          draggable: false,\n          linksControl: false,\n          motionTracking: false,\n          motionTrackingControl: false,\n          clickToGo: false,\n          keyboardShortcuts: false\n        });\n        window.addEventListener(\"keydown\", event => {\n          if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"+\", \"=\", \"_\", \"-\"].includes(event.key) && !event.metaKey && !event.altKey && !event.ctrlKey) {\n            event.stopPropagation();\n          }\n        }, {\n          capture: true\n        });\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\n      }\n    }\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      zoom: 1,\n      center: startCoordinates,\n      disableDefaultUI: true\n    });\n    map.addListener(\"click\", event => {\n      if (marker) {\n        document.getElementById(\"search-button\").style.display = \"block\";\n        marker.setPosition(event.latLng);\n      } else {\n        marker = new window.google.maps.Marker({\n          position: event.latLng,\n          map: map\n        });\n      }\n      setSelectedCoordinates({\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      });\n    });\n    findRandomStreetView();\n  }, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n  function calculateDistance(coord1, coord2) {\n    if (!coord1 || !coord2) {\n      console.error(\"Ongeldige coördinaten:\", coord1, coord2);\n      return 0;\n    }\n    const R = 6371;\n    const dLat = (coord2.lat - coord1.lat) * Math.PI / 180;\n    const dLng = (coord2.lng - coord1.lng) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(coord1.lat * Math.PI / 180) * Math.cos(coord2.lat * Math.PI / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\n    const distance = R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n    return Number.isFinite(distance) ? distance : 0;\n  }\n  function stopTimer() {\n    return Math.min(timer, 150);\n  }\n  function calculateScore(distance) {\n    let score = 5000;\n    if (distance <= 4) {\n      score -= distance * 0;\n    } else if (distance <= 10) {\n      score -= 4 * 0 + (distance - 4) * 1;\n    } else if (distance <= 100) {\n      score -= 6 * 1 + (distance - 10) * 5;\n    } else if (distance <= 1000) {\n      score -= 100 * 5 + (distance - 100) * 10;\n    } else {\n      score -= 100 * 5 + (distance - 100) * 15;\n    }\n    return Math.max(Math.round(score), 0);\n  }\n  function handleSearch() {\n    if (selectedCoordinates && streetViewStartCoordinates) {\n      const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\n      if (typeof distance !== \"number\" || isNaN(distance)) {\n        console.error(\"Ongeldige afstand:\", distance);\n        return;\n      }\n      const searchTime = stopTimer();\n      const score = calculateScore(distance);\n      navigate(\"/resultaat\", {\n        state: {\n          distance: distance.toFixed(2),\n          startLat: streetViewStartCoordinates.lat,\n          startLng: streetViewStartCoordinates.lng,\n          selectedLat: selectedCoordinates.lat,\n          selectedLng: selectedCoordinates.lng,\n          searchTime,\n          score\n        }\n      });\n    } else {\n      console.warn(\"Geen coördinaten geselecteerd!\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timer-label\",\n        children: [\"Tijd over: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"timer\",\n          children: \"2:30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"progress-bar-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"street-view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"search-button\",\n      onClick: handleSearch,\n      children: \"Bekijk Afstand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map-container\",\n      className: \"collapsed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toggle-map\",\n        onClick: toggleMap,\n        children: \"\\u25B2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s2(Locatie, \"2RtRt6fl/MZP6GpBgWRV+m3RV+Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Locatie;\nexport default Locatie;\nvar _c;\n$RefreshReg$(_c, \"Locatie\");","map":{"version":3,"names":["useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Locatie","_s2","_s","$RefreshSig$","timer","setTimer","selectedCoordinates","setSelectedCoordinates","streetViewStartCoordinates","setStreetViewStartCoordinates","panorama","setPanorama","mapExpanded","setMapExpanded","apiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","timerInterval","navigate","window","google","script","document","createElement","src","async","body","appendChild","onload","initMap","clearInterval","current","toggleMap","prev","streetViewService","maps","StreetViewService","startCoordinates","lat","lng","map","marker","getRandomLocation","Math","random","toFixed","parseFloat","loadStreetView","location","getPanorama","radius","data","status","StreetViewStatus","OK","latLng","panoramaInstance","StreetViewPanorama","getElementById","position","pov","heading","pitch","zoom","fullscreenControl","enableCloseButton","addressControl","linksControl","showRoadLabels","startTimer","console","log","findRandomStreetView","mapContainer","toggleMapButton","classList","toggle","textContent","setInterval","lockStreetView","progressBarFill","updateTimerDisplay","remainingTime","minutes","floor","seconds","progressPercentage","style","width","color","setOptions","disableDefaultUI","draggable","motionTracking","motionTrackingControl","clickToGo","keyboardShortcuts","addEventListener","event","includes","key","metaKey","altKey","ctrlKey","stopPropagation","capture","alert","Map","center","addListener","display","setPosition","Marker","calculateDistance","coord1","coord2","error","R","dLat","PI","dLng","a","sin","cos","distance","atan2","sqrt","Number","isFinite","stopTimer","min","calculateScore","score","max","round","handleSearch","isNaN","searchTime","state","startLat","startLng","selectedLat","selectedLng","warn","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/teun.faassen/gip/gip_project/geozoekkr/geozoekkr-frontend/src/pages/Locatie.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/style_locatie.css\";\r\n\r\nconst Locatie = () => {\r\n  const [timer, setTimer] = useState(150);\r\n  const [selectedCoordinates, setSelectedCoordinates] = useState(null);\r\n  const [streetViewStartCoordinates, setStreetViewStartCoordinates] = useState(null);\r\n  const [panorama, setPanorama] = useState(null);\r\n  const [mapExpanded, setMapExpanded] = useState(false);\r\n  const apiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n  const timerInterval = useRef(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!window.google) {\r\n      const script = document.createElement(\"script\");\r\n      script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initMap`;\r\n      script.async = true;\r\n      document.body.appendChild(script);\r\n      script.onload = () => {\r\n        window.initMap();\r\n      };\r\n    } else {\r\n      window.initMap();\r\n    }\r\n    return () => {\r\n      clearInterval(timerInterval.current);\r\n    };\r\n  }, [apiKey]);\r\n  const toggleMap = () => {\r\n    setMapExpanded((prev) => !prev);\r\n  };\r\n\r\n  window.initMap = () => {\r\n    const streetViewService = new window.google.maps.StreetViewService();\r\n    const startCoordinates = { lat: 52.379189, lng: 4.900826 };\r\n    let map;\r\n    let marker = null;\r\n\r\n    function getRandomLocation() {\r\n      const lat = (Math.random() * 180 - 90).toFixed(6);\r\n      const lng = (Math.random() * 360 - 180).toFixed(6);\r\n      return { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n    }\r\n\r\n    function loadStreetView(location) {\r\n      streetViewService.getPanorama({ location, radius: 5000 }, (data, status) => {\r\n        if (status === window.google.maps.StreetViewStatus.OK) {\r\n          setStreetViewStartCoordinates({\r\n            lat: data.location.latLng.lat(),\r\n            lng: data.location.latLng.lng(),\r\n          });\r\n\r\n          const panoramaInstance = new window.google.maps.StreetViewPanorama(\r\n            document.getElementById(\"street-view\"),\r\n            {\r\n              position: data.location.latLng,\r\n              pov: { heading: 0, pitch: 0 },\r\n              zoom: 1,\r\n              fullscreenControl: false,\r\n              enableCloseButton: false,\r\n              addressControl: false,\r\n              linksControl: false,\r\n              showRoadLabels: false,\r\n            }\r\n          );\r\n          setPanorama(panoramaInstance);\r\n          startTimer();\r\n        } else {\r\n          console.log(\"Geen Street View gevonden op locatie:\", location);\r\n          findRandomStreetView();\r\n        }\r\n      });\r\n    }\r\n\r\n    function findRandomStreetView() {\r\n      loadStreetView(getRandomLocation());\r\n    }\r\n    \r\n    \r\n    useEffect(() => {\r\n      const mapContainer = document.getElementById(\"map-container\");\r\n      const toggleMapButton = document.getElementById(\"toggle-map\");\r\n    \r\n      if (mapContainer && toggleMapButton) {\r\n        mapContainer.classList.toggle(\"collapsed\", !mapExpanded);\r\n        toggleMapButton.textContent = mapExpanded ? \"▼\" : \"▲\";\r\n      }\r\n    }, [mapExpanded]);\r\n    \r\n\r\n    function startTimer() {\r\n      timerInterval.current = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(timerInterval.current);\r\n            lockStreetView();\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n    useEffect(() => {\r\n      const progressBarFill = document.getElementById(\"progress-bar-fill\");\r\n      if (!progressBarFill) return;\r\n    \r\n      const updateTimerDisplay = () => {\r\n        let remainingTime = timer;\r\n        const minutes = Math.floor(remainingTime / 60);\r\n        const seconds = remainingTime % 60;\r\n        document.getElementById(\"timer\").textContent = `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n    \r\n        // Progress-bar updaten\r\n        const progressPercentage = (remainingTime / 150) * 100;\r\n        progressBarFill.style.width = `${progressPercentage}%`;\r\n    \r\n        // Kleur aanpassen\r\n        if (remainingTime <= 30) {\r\n          document.getElementById(\"timer\").style.color = \"orange\";\r\n        }\r\n        if (remainingTime <= 0) {\r\n          document.getElementById(\"timer\").style.color = \"red\";\r\n        }\r\n      };\r\n    \r\n      updateTimerDisplay();\r\n    }, [timer]);\r\n    \r\n\r\n    function lockStreetView() {\r\n      if (panorama) {\r\n        panorama.setOptions({\r\n          disableDefaultUI: true,\r\n          draggable: false,\r\n          linksControl: false,\r\n          motionTracking: false,\r\n          motionTrackingControl: false,\r\n          clickToGo: false,\r\n          keyboardShortcuts: false,\r\n        });\r\n    \r\n        window.addEventListener(\"keydown\", (event) => {\r\n          if (\r\n            [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\", \"+\", \"=\", \"_\", \"-\"].includes(event.key) &&\r\n            !event.metaKey && !event.altKey && !event.ctrlKey\r\n          ) {\r\n            event.stopPropagation();\r\n          }\r\n        }, { capture: true });\r\n    \r\n        alert(\"Tijd voorbij! Je kunt niet meer bewegen.\");\r\n      }\r\n    }\r\n    \r\n\r\n    map = new window.google.maps.Map(document.getElementById(\"map\"), {\r\n      zoom: 1,\r\n      center: startCoordinates,\r\n      disableDefaultUI: true,\r\n    });\r\n\r\n    map.addListener(\"click\", (event) => {\r\n      if (marker) {\r\n        document.getElementById(\"search-button\").style.display = \"block\";\r\n        marker.setPosition(event.latLng);\r\n      } else {\r\n        marker = new window.google.maps.Marker({\r\n          position: event.latLng,\r\n          map: map,\r\n        });\r\n      }\r\n      setSelectedCoordinates({ lat: event.latLng.lat(), lng: event.latLng.lng() });\r\n    });\r\n\r\n    findRandomStreetView();\r\n  };\r\n\r\n  function calculateDistance(coord1, coord2) {\r\n    if (!coord1 || !coord2) {\r\n      console.error(\"Ongeldige coördinaten:\", coord1, coord2);\r\n      return 0;\r\n    }\r\n    const R = 6371;\r\n    const dLat = ((coord2.lat - coord1.lat) * Math.PI) / 180;\r\n    const dLng = ((coord2.lng - coord1.lng) * Math.PI) / 180;\r\n    const a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos((coord1.lat * Math.PI) / 180) * Math.cos((coord2.lat * Math.PI) / 180) * Math.sin(dLng / 2) * Math.sin(dLng / 2);\r\n    const distance = R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\r\n    return Number.isFinite(distance) ? distance : 0;\r\n  }\r\n\r\n  function stopTimer() {\r\n    return Math.min(timer, 150);\r\n  }\r\n\r\n  function calculateScore(distance) {\r\n    let score = 5000;\r\n    if (distance <= 4) {\r\n      score -= distance * 0;\r\n    } else if (distance <= 10) {\r\n      score -= (4 * 0) + ((distance - 4) * 1);\r\n    } else if (distance <= 100) {\r\n      score -= (6 * 1) + ((distance - 10) * 5);\r\n    } else if (distance <= 1000) {\r\n      score -= (100 * 5) + ((distance - 100) * 10);\r\n    } else {\r\n      score -= (100 * 5) + ((distance - 100) * 15);\r\n    }\r\n    return Math.max(Math.round(score), 0);\r\n  }\r\n\r\n  function handleSearch() {\r\n    if (selectedCoordinates && streetViewStartCoordinates) {\r\n      const distance = calculateDistance(streetViewStartCoordinates, selectedCoordinates);\r\n      if (typeof distance !== \"number\" || isNaN(distance)) {\r\n        console.error(\"Ongeldige afstand:\", distance);\r\n        return;\r\n      }\r\n      const searchTime = stopTimer();\r\n      const score = calculateScore(distance);\r\n  \r\n      navigate(\"/resultaat\", {\r\n        state: {\r\n          distance: distance.toFixed(2),\r\n          startLat: streetViewStartCoordinates.lat,\r\n          startLng: streetViewStartCoordinates.lng,\r\n          selectedLat: selectedCoordinates.lat,\r\n          selectedLng: selectedCoordinates.lng,\r\n          searchTime,\r\n          score,\r\n        },\r\n      });\r\n    } else {\r\n      console.warn(\"Geen coördinaten geselecteerd!\");\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div id=\"timer-container\">\r\n        <div id=\"timer-label\">\r\n          Tijd over: <span id=\"timer\">2:30</span>\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <span id=\"progress-bar-fill\"></span>\r\n        </div>\r\n      </div>    \r\n  \r\n      <div id=\"street-view\"></div>\r\n  \r\n      <button id=\"search-button\" onClick={handleSearch}>Bekijk Afstand</button>\r\n  \r\n      <div id=\"map-container\" className=\"collapsed\">\r\n        <div id=\"toggle-map\" onClick={toggleMap}>▲</div>\r\n        <div id=\"map\"></div>\r\n      </div>    \r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Locatie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}